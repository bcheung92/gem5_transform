#!/system/bin/sh

#
# This is a tricky script to understand. When run in M5, it creates
# a checkpoint after Linux boot up, but before any benchmarks have
# been run. By playing around with environment variables, we can
# detect whether the checkpoint has been taken.
#  - If the checkpoint hasn't been taken, the script allows M5 to checkpoint the system,
# re-read this script into a new tmp file, and re-run it. On the
# second execution of this script (checkpoint has been taken), the
# environment variable is already set, so the script will exit the
# simulation
#  - When we restore the simulation from a checkpoint, we can
# specify a new script for M5 to execute in the full-system simulation,
# and it will be executed as if a checkpoint had just been taken.
#
# Author:
#   Joel Hestness, hestness@cs.utexas.edu
#   while at AMD Research and Advanced Development Lab
# Date:
#   10/5/2010
#

# Test if the RUNSCRIPT_VAR environment variable is already set
if [ "${RUNSCRIPT_VAR+set}" != set ]
then
	# Signal our future self that it's safe to continue
	export RUNSCRIPT_VAR=1
else
	# We've already executed once, so we should exit
	/sbin/m5 exit
fi

#busybox sleep 600
# Checkpoint the first execution

# let's change the sampling period of ondemand governor it would be 40ms currently. Let's make it 20ms.
cd /sys/devices/system/cpu/cpu0/cpufreq
echo "performance" > scaling_governor

cd /sys/devices/system/cpu/cpu1/cpufreq
echo "performance" > scaling_governor

cd /sys/devices/system/cpu/cpu2/cpufreq
echo "performance" > scaling_governor

cd /sys/devices/system/cpu/cpu3/cpufreq
echo "performance" > scaling_governor

/sbin/m5 checkpoint

# Test if we previously okayed ourselves to run this script
if [ "$RUNSCRIPT_VAR" -eq 1 ]
then

	# Signal our future self not to recurse infinitely
	export RUNSCRIPT_VAR=2

	# Read the script for the checkpoint restored execution
	/sbin/m5 readfile > /data/runscript.sh
	chmod 755 /data/runscript.sh

	# Execute the new runscript
	if [ -s /data/runscript.sh ]
	then
		/system/bin/sh /data/runscript.sh
	else
            echo "ERROR! I should not be here!"
	fi

fi

/sbin/m5 exit
